[tox]
envlist = py26,py27,pep8

[testenv]
setenv = VIRTUAL_ENV={envdir}
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
         OS_STDOUT_NOCAPTURE=False
         OS_STDERR_NOCAPTURE=False

deps = -r{toxinidir}/tools/pip-requires
       -r{toxinidir}/tools/test-requires
commands = python setup.py testr --slowest --testr-args='{posargs}'

[tox:jenkins]
sitepackages = True
downloadcache = ~/cache/pip

[testenv:pep8]
deps = -r{toxinidir}/tools/pip-requires
        pep8==1.3.3
commands =
  python tools/hacking.py --ignore=N4,E12,E502,E711,E721,E712 --repeat --show-source \
    --exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg .
  python tools/hacking.py --ignore=N4,E12,E502,E711,E721,E712 --repeat --show-source \
    --filename=nova* bin

[testenv:pylint]
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/tools/pip-requires
        pylint==0.25.2
commands = bash tools/lintstack.sh

[testenv:pyflakes]
deps = pyflakes
commands = python tools/flakes.py nova

[testenv:cover]
# Also do not run test_coverage_ext tests while gathering coverage as those
# tests conflict with coverage.
setenv = VIRTUAL_ENV={envdir}
commands =
  python setup.py testr --coverage \
    --testr-args='^(?!.*test.*coverage).*$' \
    --omit="nova/cloudpipe/*,nova/objectstore/*,nova/virt/baremetal/*,nova/virt/hyperv/*,nova/virt/powervm/*,nova/virt/vmwareapi/*,nova/virt/xenapi/*,nova/api/openstack/volume/*,nova/volume/*,nova/tests/*"

[testenv:venv]
commands = {posargs}
